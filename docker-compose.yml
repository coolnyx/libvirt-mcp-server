version: '3.8'

services:
  libvirt-mcp-server:
    build: .
    container_name: libvirt-mcp-server
    restart: unless-stopped
    
    # Network configuration
    ports:
      - "8000:8000"  # HTTP/SSE transport port
    
    # Volume mounts
    volumes:
      # Mount host libvirt socket for VM access
      - /var/run/libvirt:/var/run/libvirt:ro
      
      # Mount configuration
      - ./config.yaml:/app/config.yaml:ro
      
      # Mount logs directory
      - ./logs:/app/logs
      
      # Optional: mount additional configurations
      - ./configs:/app/configs:ro
    
    # Environment variables
    environment:
      # Libvirt configuration
      - LIBVIRT_URI=qemu:///system
      - LIBVIRT_TIMEOUT=30
      
      # MCP server configuration
      - MCP_TRANSPORT=http
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000
      
      # Security configuration
      - MCP_AUTH_REQUIRED=true
      - MCP_AUDIT_LOG=true
      
      # Logging configuration
      - MCP_LOG_LEVEL=INFO
      - MCP_LOG_FILE=/app/logs/libvirt-mcp-server.log
    
    # Security configuration
    security_opt:
      - no-new-privileges:true
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'
    
    # Health check
    healthcheck:
      test: ["CMD", "libvirt-mcp-server", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Labels for organization
    labels:
      - "com.example.service=libvirt-mcp-server"
      - "com.example.version=1.0.0"

  # Optional: Add a monitoring service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    profiles:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: libvirt-mcp-network
